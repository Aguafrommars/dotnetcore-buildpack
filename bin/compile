#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

### Configure environment
set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

### Configure directories
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

mkdir -p $BUILD_DIR/.profile.d
cp $BP_DIR/profile/* $BUILD_DIR/.profile.d/

source $BP_DIR/lib/utils

export_env_dir "$ENV_DIR"

export PATH="${BUILD_DIR}/.heroku/dotnet:${PATH}"

cd $BUILD_DIR

if [ -z ${PROJECT_FILE:-} ]; then
	PROJECT_FILE=$(x=$(dirname $(find ${BUILD_DIR} -maxdepth 5 -iname Startup.cs -o -iname Program.cs -o -iname Program.fs | head -1)); while [[ "$x" =~ $BUILD_DIR ]] ; do find "$x" -maxdepth 1 -name *.fsproj -o -name *.csproj; x=`dirname "$x"`; done)
fi

topic "Project File"
info $PROJECT_FILE

if [ -z ${PROJECT_NAME:-} ]; then
	PROJECT_NAME=$(basename ${PROJECT_FILE%.*})
fi

topic "Project Name"
info $PROJECT_NAME

if [ -z ${HEROKU_HOSTNAME:-} ]; then
	info "The HEROKU_HOSTNAME config var should be set to override config on build."
else
	topic "Update config files"
	info "update configuration files with hostname '${HEROKU_HOSTNAME}'"

	if [ -f heroku_output/appsettings.$ASPNETCORE_ENVIRONMENT.json ]; then
		rm heroku_output/appsettings.$ASPNETCORE_ENVIRONMENT.json
	fi

	sed -i "s/https:\/\/theidserver.herokuapp.com/https:\/\/${HEROKU_HOSTNAME}/g" heroku_output/wwwroot/heroku-metadata.json 
	sed "s/https:\/\/localhost:5443/https:\/\/${HEROKU_HOSTNAME}/g" heroku_output/appsettings.json >> heroku_output/appsettings.$ASPNETCORE_ENVIRONMENT.json
fi

if [ -f ${BUILD_DIR}/Procfile ] && grep -q '^web:' ${BUILD_DIR}/Procfile ; then
	topic "WARNING"
	echo "Be careful with custom Procfile" | indent
else
	echo "Add web process to Procfile" | indent
	cat << EOT >> ${BUILD_DIR}/Procfile
web: cd \$HOME/heroku_output && ./${PROJECT_NAME}
EOT
fi
